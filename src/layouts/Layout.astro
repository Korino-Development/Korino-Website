--- 
import Footer from '../components/Footer.astro';
import Navigation from '../components/Navigation.astro';
import { GoogleFontsOptimizer } from "astro-google-fonts-optimizer";

export interface Props {
	title: string;
	description: string;
	primary: string;
	secondary: string;
}

const { title, description, primary, secondary } = Astro.props;
const style: string = `background: linear-gradient(to bottom right, ${primary}, ${secondary}); -webkit-background-clip: text; -webkit-text-fill-color: transparent;`;
---

<!DOCTYPE html>
<html lang="en" class="scroll-smooth">
	<head>
		<meta charset="UTF-8" />
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width initial-scale=1.0"/>
		<meta name="generator" content={Astro.generator}/>
		<meta name="keywords" content="korino, korino development, korii bot, korino world, korino pvp, korii, minecraft server, miningpvp, minecraft, server"/>
		<meta name="description" content={description}/>

		<meta name="title" content={title}>
		<meta name="author" content="Korino Development">
		<meta name="description" content={description}>
		<meta name="theme-color" media="(prefers-color-scheme: dark)" content="#171717"/>
		<meta name="theme-color" media="(prefers-color-scheme: light)" content="#f5f5f5"/>

		<title>{title}</title>
		<link rel="icon" type="image/svg+xml" href="/favicon.svg"/>
		<link rel="apple-touch-icon" type="image/svg+xml" href="/favicon.svg"/>

		<GoogleFontsOptimizer url="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700;900&display=swap"/>
	</head>
	<body class="font-roboto text-black dark:text-white bg-gradient-to-br text-lg bg-neutral-100 dark:bg-[#111313] flex flex-row justify-center w-full h-full min-h-screen">
		<Navigation title={title} style={style}/>

		<div id="blob" class="animate-rotate bg-white opacity-50 overflow-hidden duration-1000 rounded-1/2 h-34 aspect-square fixed top-1/2 left-1/2"/>
		<div id="blur" class="h-full w-full fixed z-10 backdrop-blur-12"/>
		<div class="w-[80%] md:w-[45rem] mt-32 z-10" id="main">
			<slot/>
			<Footer/>
		</div>
	</body>
</html>

<style is:global define:vars={{ primary, secondary }}>
	#blob {
		background: linear-gradient(to right, var(--primary), var(--secondary));
		translate: -50% -50%;
		filter: brightness(50%);
	}
</style>

<script>
	if (!(typeof window === "undefined")) {
		void new Audio("pop.mp3").play().catch(() => null);
	}

	const blob = document.getElementById("blob");
	const buttons = document.querySelectorAll("button");

	if (!blob) {
		console.error("⚠️ Blob does not exist.");

	} else if (!buttons) {
		console.error("⚠️ Buttons do not exists.");

	} else {
		console.info("🎉 Blob and buttons exist.")
		buttons.forEach((item) => {
			item.addEventListener("mouseenter", () => {
				blob.style.setProperty("opacity", "0.7");
			});

			item.addEventListener("mouseleave", () => {
				blob.style.setProperty("opacity", "0.5");
			});
		});

		window.addEventListener("load", () => {
			if (window.matchMedia("(pointer:fine)").matches) {
				console.info("The user has a cursor.");
				console.info("Nothing has been changed.");

			} else {
				console.info("The user doesn't have a cursor.");
				blob.classList.add("hidden");
				console.info("Blob has been hidden.");

				if (document.body.style.overflow != "hidden") {
					document.body.style.setProperty("overflow", "auto");
					console.info("Scroll bar has been set to auto.");
				}
			}
		});

		document.body.addEventListener("mouseenter", (event) => {
			if (window.matchMedia("(pointer:fine)").matches) {
				const { clientX, clientY } = event;

				blob.animate({
					left: `${clientX}px`,
					top: `${clientY}px`
				}, { duration: 500, fill: "forwards" });
			}
		});

		document.body.addEventListener("mousemove", (event) => {
			if (!blob.classList.contains("hidden")) {
				const { clientX, clientY } = event;

				blob.animate({
					left: `${clientX}px`,
					top: `${clientY}px`
				}, { duration: 3000, fill: "forwards" });
			} else {
				if (window.matchMedia("(pointer:fine)").matches) {
					blob.classList.remove("hidden");
				}
			}
		});
	}
</script>